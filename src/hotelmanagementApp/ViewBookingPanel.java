/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package hotelmanagementApp;

import hotelmanagementApp.dao.ViewBookingPanelDAO;
import hotelmanagementApp.model.ViewBookingPanelModel;
import java.awt.Color;
import java.util.ArrayList;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

public class ViewBookingPanel extends javax.swing.JPanel {

    DefaultTableModel dtm;

    public ViewBookingPanel() {

        initComponents();
        jTable1.setModel(new DefaultTableModel(null, new String[]{"Id", "Name", "Email", "Mobile", "Id Name", "Id Proof", "Address", "Nationality", "No. Of Persons", "No. Of Days", "AC/nonAC", "Room Type", "Room No.", "Rate", "Arrival Date", "Booking Date", "Booking Time", "Checkin Date", "Checkin Time", "Checkout Date", "Checkout Time", "Note"}));

        dtm = (DefaultTableModel) jTable1.getModel();
        ArrayList<ViewBookingPanelModel> al = ViewBookingPanelDAO.getViewPanelModelList();
        for(ViewBookingPanelModel p : al){
            Object o[] = {p.getId(), p.getName(), p.getEmailId(), p.getMobileNumber(), p.getIdName(), p.getIdProof(), p.getAddress(), p.getNationality(), p.getNo_of_person(), p.getNo_of_Days(), p.getAc_non_ac(), p.getRoomType(), p.getRoomNo(), p.getRate(), p.getArrival_date(), p.getBooking_date(), p.getBooking_time(), p.getCheckin_date(), p.getCheckin_time(), p.getCheckout_date(), p.getCheckout_time(), p.getNote()};
            dtm.addRow(o);
        }
        jTable1.setModel(dtm);
        // jTable1.setAutoResizeMode(jTable1.AUTO_RESIZE_ALL_COLUMNS);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        refresh = new javax.swing.JButton();
        searchtxt = new javax.swing.JTextField();
        searchbtn = new javax.swing.JButton();
        searchByCombo = new javax.swing.JComboBox();

        setPreferredSize(new java.awt.Dimension(1363, 740));

        jScrollPane1.setHorizontalScrollBarPolicy(javax.swing.ScrollPaneConstants.HORIZONTAL_SCROLLBAR_ALWAYS);
        jScrollPane1.setVerticalScrollBarPolicy(javax.swing.ScrollPaneConstants.VERTICAL_SCROLLBAR_ALWAYS);

        jTable1.setAutoCreateRowSorter(true);
        jTable1.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        jTable1.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Id", "Name", "Email", "Mobile", "Id Name", "Id Proof", "Address", "Nationality", "No. of Persons", "No. of Days", "AC/nonAC", "Room Type", "Room No.", "Rate", "Arrival Date", "Booking Date", "Booking Time", "Checkin Date", "Checkin Time", "Checkout Date", "Checkout Time", "Note"
            }
        ));
        jTable1.setAutoResizeMode(javax.swing.JTable.AUTO_RESIZE_OFF);
        jTable1.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jTable1.setFillsViewportHeight(true);
        jTable1.setFocusCycleRoot(true);
        jTable1.setMinimumSize(new java.awt.Dimension(1333, 640));
        jTable1.setPreferredSize(new java.awt.Dimension(1333, 640));
        jTable1.setRowHeight(30);
        jTable1.setRowMargin(8);
        jTable1.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        jTable1.getTableHeader().setReorderingAllowed(false);
        jTable1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTable1MouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(jTable1);
        if (jTable1.getColumnModel().getColumnCount() > 0) {
            jTable1.getColumnModel().getColumn(0).setResizable(false);
            jTable1.getColumnModel().getColumn(1).setResizable(false);
            jTable1.getColumnModel().getColumn(1).setPreferredWidth(300);
            jTable1.getColumnModel().getColumn(2).setResizable(false);
            jTable1.getColumnModel().getColumn(2).setPreferredWidth(350);
            jTable1.getColumnModel().getColumn(3).setResizable(false);
            jTable1.getColumnModel().getColumn(3).setPreferredWidth(150);
            jTable1.getColumnModel().getColumn(4).setResizable(false);
            jTable1.getColumnModel().getColumn(4).setPreferredWidth(100);
            jTable1.getColumnModel().getColumn(5).setResizable(false);
            jTable1.getColumnModel().getColumn(5).setPreferredWidth(100);
            jTable1.getColumnModel().getColumn(6).setResizable(false);
            jTable1.getColumnModel().getColumn(6).setPreferredWidth(100);
            jTable1.getColumnModel().getColumn(7).setResizable(false);
            jTable1.getColumnModel().getColumn(7).setPreferredWidth(100);
            jTable1.getColumnModel().getColumn(8).setResizable(false);
            jTable1.getColumnModel().getColumn(8).setPreferredWidth(150);
            jTable1.getColumnModel().getColumn(9).setResizable(false);
            jTable1.getColumnModel().getColumn(9).setPreferredWidth(150);
            jTable1.getColumnModel().getColumn(10).setResizable(false);
            jTable1.getColumnModel().getColumn(10).setPreferredWidth(100);
            jTable1.getColumnModel().getColumn(11).setResizable(false);
            jTable1.getColumnModel().getColumn(11).setPreferredWidth(100);
            jTable1.getColumnModel().getColumn(12).setResizable(false);
            jTable1.getColumnModel().getColumn(12).setPreferredWidth(100);
            jTable1.getColumnModel().getColumn(13).setResizable(false);
            jTable1.getColumnModel().getColumn(13).setPreferredWidth(100);
            jTable1.getColumnModel().getColumn(14).setResizable(false);
            jTable1.getColumnModel().getColumn(14).setPreferredWidth(100);
            jTable1.getColumnModel().getColumn(15).setResizable(false);
            jTable1.getColumnModel().getColumn(15).setPreferredWidth(100);
            jTable1.getColumnModel().getColumn(16).setResizable(false);
            jTable1.getColumnModel().getColumn(16).setPreferredWidth(100);
            jTable1.getColumnModel().getColumn(17).setResizable(false);
            jTable1.getColumnModel().getColumn(17).setPreferredWidth(100);
            jTable1.getColumnModel().getColumn(18).setResizable(false);
            jTable1.getColumnModel().getColumn(18).setPreferredWidth(100);
            jTable1.getColumnModel().getColumn(19).setResizable(false);
            jTable1.getColumnModel().getColumn(19).setPreferredWidth(100);
            jTable1.getColumnModel().getColumn(20).setResizable(false);
            jTable1.getColumnModel().getColumn(20).setPreferredWidth(100);
            jTable1.getColumnModel().getColumn(21).setResizable(false);
            jTable1.getColumnModel().getColumn(21).setPreferredWidth(100);
        }

        refresh.setBackground(new java.awt.Color(51, 102, 255));
        refresh.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        refresh.setText("Refresh");
        refresh.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                refreshActionPerformed(evt);
            }
        });

        searchtxt.setColumns(2);
        searchtxt.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N

        searchbtn.setBackground(new java.awt.Color(204, 204, 255));
        searchbtn.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        searchbtn.setText("Search");
        searchbtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                searchbtnActionPerformed(evt);
            }
        });

        searchByCombo.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        searchByCombo.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Name", "Mobile no.", "Room no.", "Booking Date", "Check In Date" }));
        searchByCombo.setToolTipText("please select any one.");
        searchByCombo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                searchByComboActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jScrollPane1)
                        .addContainerGap())
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(searchtxt, javax.swing.GroupLayout.PREFERRED_SIZE, 400, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(searchbtn, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(searchByCombo, javax.swing.GroupLayout.PREFERRED_SIZE, 188, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 404, Short.MAX_VALUE)
                        .addComponent(refresh)
                        .addGap(20, 20, 20))))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(searchbtn, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(refresh, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(searchByCombo, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(searchtxt, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 675, Short.MAX_VALUE)
                .addGap(14, 14, 14))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void jTable1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTable1MouseClicked
        int column = 0;
        int row = jTable1.getSelectedRow();
        String value = "" + jTable1.getModel().getValueAt(row, column);
        int selected_id = Integer.parseInt(value);
        new ClickOnViewBooking(selected_id).setVisible(true);
    }//GEN-LAST:event_jTable1MouseClicked

    private void refreshActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_refreshActionPerformed

        jTable1.setModel(new DefaultTableModel(null, new String[]{"Id", "Name", "Email", "Mobile", "Id Name", "Id Proof", "Address", "Nationality", "No. Of Persons", "No. Of Days", "AC/nonAC", "Room Type", "Room No.", "Rate", "Arrival Date", "Booking Date", "Booking Time", "Checkin Date", "Checkin Time", "Checkout Date", "Checkout Time", "Note"}));
        jTable1.getTableHeader().setOpaque(false);
        jTable1.getTableHeader().setBackground(Color.red);
        jTable1.getTableHeader().setForeground(Color.BLACK);
        dtm = (DefaultTableModel) jTable1.getModel();
        ArrayList<ViewBookingPanelModel> al = ViewBookingPanelDAO.getViewPanelModelList();
        for (ViewBookingPanelModel p : al) {
            Object o[] = {p.getId(), p.getName(), p.getEmailId(), p.getMobileNumber(), p.getIdName(), p.getIdProof(), p.getAddress(), p.getNationality(), p.getNo_of_person(), p.getNo_of_Days(), p.getAc_non_ac(), p.getRoomType(), p.getRoomNo(), p.getRate(), p.getArrival_date(), p.getBooking_date(), p.getBooking_time(), p.getCheckin_date(), p.getCheckin_time(), p.getCheckout_date(), p.getCheckout_time(), p.getNote()};
            dtm.addRow(o);
        }
        jTable1.setModel(dtm);
        searchtxt.setText(null);

    }//GEN-LAST:event_refreshActionPerformed

    private void searchbtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_searchbtnActionPerformed

        String value = (String) searchByCombo.getSelectedItem();

        String searchText = searchtxt.getText();
        switch (value) {
            case "Name":
                jTable1.setModel(new DefaultTableModel(null, new String[]{"Id", "Name", "Email", "Mobile", "Id Name", "Id Proof", "Address", "Nationality", "No. Of Persons", "No. Of Days", "AC/nonAC", "Room Type", "Room No.", "Rate", "Arrival Date", "Booking Date", "Booking Time", "Checkin Date", "Checkin Time", "Checkout Date", "Checkout Time", "Note"}));
                dtm = (DefaultTableModel) jTable1.getModel();
                ArrayList<ViewBookingPanelModel> al = ViewBookingPanelDAO.searchListByName(searchText);
                if (al.size() != 0) {
                    for (ViewBookingPanelModel p : al) {
                        Object o[] = {p.getId(), p.getName(), p.getEmailId(), p.getMobileNumber(), p.getIdName(), p.getIdProof(), p.getAddress(), p.getNationality(), p.getNo_of_person(), p.getNo_of_Days(), p.getAc_non_ac(), p.getRoomType(), p.getRoomNo(), p.getRate(), p.getArrival_date(), p.getBooking_date(), p.getBooking_time(), p.getCheckin_date(), p.getCheckin_time(), p.getCheckout_date(), p.getCheckout_time(), p.getNote()};
                        dtm.addRow(o);
                    }
                    jTable1.setModel(dtm);
                } else {
                    JOptionPane.showMessageDialog(this, "Enter Appropriate Data.", "Not Found", JOptionPane.ERROR_MESSAGE);
                }
                break;

            case "Mobile no.":
                jTable1.setModel(new DefaultTableModel(null, new String[]{"Id", "Name", "Email", "Mobile", "Id Name", "Id Proof", "Address", "Nationality", "No. Of Persons", "No. Of Days", "AC/nonAC", "Room Type", "Room No.", "Rate", "Arrival Date", "Booking Date", "Booking Time", "Checkin Date", "Checkin Time", "Checkout Date", "Checkout Time", "Note"}));

                dtm = (DefaultTableModel) jTable1.getModel();
                ArrayList<ViewBookingPanelModel> al1 = ViewBookingPanelDAO.searchListByMobileNo(searchText);
                if (al1.size() != 0) {
                    for (ViewBookingPanelModel p : al1) {
                        Object o[] = {p.getId(), p.getName(), p.getEmailId(), p.getMobileNumber(), p.getIdName(), p.getIdProof(), p.getAddress(), p.getNationality(), p.getNo_of_person(), p.getNo_of_Days(), p.getAc_non_ac(), p.getRoomType(), p.getRoomNo(), p.getRate(), p.getArrival_date(), p.getBooking_date(), p.getBooking_time(), p.getCheckin_date(), p.getCheckin_time(), p.getCheckout_date(), p.getCheckout_time(), p.getNote()};
                        dtm.addRow(o);
                    }
                    jTable1.setModel(dtm);
                } else {
                    JOptionPane.showMessageDialog(this, "Enter Appropriate Data.", "Not Found", JOptionPane.ERROR_MESSAGE);
                }
                break;
            case "Room no.":
                jTable1.setModel(new DefaultTableModel(null, new String[]{"Id", "Name", "Email", "Mobile", "Id Name", "Id Proof", "Address", "Nationality", "No. Of Persons", "No. Of Days", "AC/nonAC", "Room Type", "Room No.", "Rate", "Arrival Date", "Booking Date", "Booking Time", "Checkin Date", "Checkin Time", "Checkout Date", "Checkout Time", "Note"}));

                dtm = (DefaultTableModel) jTable1.getModel();
                ArrayList<ViewBookingPanelModel> al2 = ViewBookingPanelDAO.searchListByRoomNo(searchText);
                if (al2.size() != 0) {
                    for (ViewBookingPanelModel p : al2) {
                        Object o[] = {p.getId(), p.getName(), p.getEmailId(), p.getMobileNumber(), p.getIdName(), p.getIdProof(), p.getAddress(), p.getNationality(), p.getNo_of_person(), p.getNo_of_Days(), p.getAc_non_ac(), p.getRoomType(), p.getRoomNo(), p.getRate(), p.getArrival_date(), p.getBooking_date(), p.getBooking_time(), p.getCheckin_date(), p.getCheckin_time(), p.getCheckout_date(), p.getCheckout_time(), p.getNote()};
                        dtm.addRow(o);
                    }
                    jTable1.setModel(dtm);
                } else {
                    JOptionPane.showMessageDialog(this, "Enter Appropriate Data.", "Not Found", JOptionPane.ERROR_MESSAGE);
                }
                break;
            case "Booking Date":
                jTable1.setModel(new DefaultTableModel(null, new String[]{"Id", "Name", "Email", "Mobile", "Id Name", "Id Proof", "Address", "Nationality", "No. Of Persons", "No. Of Days", "AC/nonAC", "Room Type", "Room No.", "Rate", "Arrival Date", "Booking Date", "Booking Time", "Checkin Date", "Checkin Time", "Checkout Date", "Checkout Time", "Note"}));

                dtm = (DefaultTableModel) jTable1.getModel();
                ArrayList<ViewBookingPanelModel> al3 = ViewBookingPanelDAO.searchListByBookingDate(searchText);
                if (al3.size() != 0) {
                    for (ViewBookingPanelModel p : al3) {
                        Object o[] = {p.getId(), p.getName(), p.getEmailId(), p.getMobileNumber(), p.getIdName(), p.getIdProof(), p.getAddress(), p.getNationality(), p.getNo_of_person(), p.getNo_of_Days(), p.getAc_non_ac(), p.getRoomType(), p.getRoomNo(), p.getRate(), p.getArrival_date(), p.getBooking_date(), p.getBooking_time(), p.getCheckin_date(), p.getCheckin_time(), p.getCheckout_date(), p.getCheckout_time(), p.getNote()};
                        dtm.addRow(o);
                    }
                    jTable1.setModel(dtm);
                } else {
                    JOptionPane.showMessageDialog(this, "Enter Appropriate Data.", "Not Found", JOptionPane.ERROR_MESSAGE);
                }
                break;
            case "Check In Date":
                jTable1.setModel(new DefaultTableModel(null, new String[]{"Id", "Name", "Email", "Mobile", "Id Name", "Id Proof", "Address", "Nationality", "No. Of Persons", "No. Of Days", "AC/nonAC", "Room Type", "Room No.", "Rate", "Arrival Date", "Booking Date", "Booking Time", "Checkin Date", "Checkin Time", "Checkout Date", "Checkout Time", "Note"}));

                dtm = (DefaultTableModel) jTable1.getModel();
                ArrayList<ViewBookingPanelModel> al4 = ViewBookingPanelDAO.searchListByCheckInDate(searchText);
                if (al4.size() != 0) {
                    for (ViewBookingPanelModel p : al4) {
                        Object o[] = {p.getId(), p.getName(), p.getEmailId(), p.getMobileNumber(), p.getIdName(), p.getIdProof(), p.getAddress(), p.getNationality(), p.getNo_of_person(), p.getNo_of_Days(), p.getAc_non_ac(), p.getRoomType(), p.getRoomNo(), p.getRate(), p.getArrival_date(), p.getBooking_date(), p.getBooking_time(), p.getCheckin_date(), p.getCheckin_time(), p.getCheckout_date(), p.getCheckout_time(), p.getNote()};
                        dtm.addRow(o);
                    }
                    jTable1.setModel(dtm);
                } else {
                    JOptionPane.showMessageDialog(this, "Enter Appropriate Data.", "Not Found", JOptionPane.ERROR_MESSAGE);
                }
                break;

        }

    }//GEN-LAST:event_searchbtnActionPerformed

    private void searchByComboActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_searchByComboActionPerformed

    }//GEN-LAST:event_searchByComboActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTable1;
    private javax.swing.JButton refresh;
    private javax.swing.JComboBox searchByCombo;
    private javax.swing.JButton searchbtn;
    private javax.swing.JTextField searchtxt;
    // End of variables declaration//GEN-END:variables
}
